---
- name: Deploy Node.js App with Nginx
  hosts: app1
  become: yes
  vars:
    app_directory: /var/www/myapp
    repo_url: https://github.com/preye419/newgroup38.git

  tasks:
    - name: Install required dependencies
      yum:
        name:
          - git
          - epel-release
          - nodejs
          - npm
        state: present

    - name: Add Node.js repository
      shell: curl -sL https://rpm.nodesource.com/setup_14.x | bash -
      args:
        warn: false

    - name: Install Node.js
      yum:
        name: nodejs
        state: present

    - name: Install Nginx repository
      yum:
        name: "https://nginx.org/packages/centos/7/x86_64/RPMS/nginx-1.20.1-1.el7.ngx.x86_64.rpm"
        state: present

    - name: Install Nginx
      yum:
        name: nginx
        state: present

    - name: Start and enable Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Create app directory
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: centos
        group: centos
        mode: '0755'

    - name: Clone the application code
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_directory }}"
        version: main
        force: yes

    - name: Set permissions on app directory
      file:
        path: "{{ app_directory }}"
        owner: centos
        group: centos
        recurse: yes

    - name: Install app dependencies
      npm:
        path: "{{ app_directory }}"
        state: present
        production: yes
        executable: /usr/bin/npm

    - name: Start the Node.js application
      shell: |
        cd {{ app_directory }}
        npm start &
      args:
        chdir: "{{ app_directory }}"
      async: 30
      poll: 0

    - name: Configure Nginx as a reverse proxy
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: '0644'
      notify:
        - Restart Nginx

    - name: Open HTTP and HTTPS ports in the firewall
      firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      with_items:
        - 80/tcp
        - 443/tcp
      notify:
        - Reload Firewalld

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

    - name: Reload Firewalld
      service:
        name: firewalld
        state: reloaded
...